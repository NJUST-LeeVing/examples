#include<iostream>
using namespace std;

class Point {
public:
	Point() {}
	Point(double x, double y) {
		this->m_X = x;
		this->m_Y = y;
	}
	~Point() {}
	void showPoint() {
		cout << "x坐标：" << this->m_X << "y坐标：" << this->m_Y << endl;
	}
	double getX() {
		return this->m_X;
	}
	double getY() {
		return this->m_Y;
	}
private:
	double m_X;
	double m_Y;
};

class Circle {
public:
	Circle() {}
	Circle(double r, Point& p) {
		this->m_R = r;
		this->m_P = p;
	}
	~Circle() {}
	double getR() {
		return this->m_R;
	}
private:
	double m_R;
	Point m_P;
};

int main() {
	double pointOfCircleX;
	double pointOfCircleY;
	double rOfCircle;
	double pointX;
	double pointY;
	cout << "请输入圆心的横坐标：" << endl;
	cin >> pointOfCircleX;
	cout << "请输入圆心的纵坐标：" << endl;
	cin >> pointOfCircleY;
	cout << "请输入圆的半径：" << endl;
	cin >> rOfCircle;
	cout << "请输入点的横坐标：" << endl;
	cin >> pointX;
	cout << "请输入点的纵坐标：" << endl;
	cin >> pointY;


	Point pointOfCircle(pointOfCircleX, pointOfCircleY);
	Point p(pointX, pointY);
	Circle c(rOfCircle, pointOfCircle);

	double dd = (pointOfCircle.getX() - p.getX()) * (pointOfCircle.getX() - p.getX()) + (pointOfCircle.getY() - p.getY()) * (pointOfCircle.getY() - p.getY());
	double rr = c.getR() * c.getR();

	if (dd > rr) {
		cout << "点在圆外" << endl;
	}
	else if (dd == rr) {
		cout << "点在圆上" << endl;
	}
	else {
		cout << "点在圆内" << endl;
	}

	system("pause");
	return 0;
}